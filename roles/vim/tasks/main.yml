- block:
  - name: Check if vim_dir already exists.
    become: no
    stat:
      path: "{{ vim_dir }}"
    register: vim_dir_state

  - name: Abort if vim_dir already exists.
    become: no
    fail:
      msg: >-
        Vim repo path collision at {{ vim_dir }}.
        Please clear this path to continue.
        Run:
        sudo rm -rf {{ vim_dir }}
    # Can only check isdir attribute if it actually exists, so we repeat the
    # existence check.
    when: vim_dir_state.stat.exists or (vim_dir_state.stat.exists and vim_dir_state.stat.isdir)

  - name: Remove previous vim installation
    become: yes
    apt:
      name: vim
      state: absent

  - name: Clone vim repo.
    become: no
    git:
      repo: https://github.com/vim/vim.git
      dest: "{{ vim_dir }}"

  - name: Install python3 config to retrieve parameters for vim.
    become: yes
    apt:
      pkg:
        - python3.6
        - python3.6-dev
      state: latest

  - name: Install checkinstall to track the package install
    become: yes
    apt:
      name: checkinstall
      state: latest

  - name: Configure vim install
    become: no
    command:
      cmd: >
        ./configure --with-features=huge --enable-multibyte --enable-rubyinterp=yes --enable-python3interp=yes --with-python3-config-dir="$(python3.6-config --configdir)" --enable-cscope
      chdir: "{{ vim_dir }}"

  - name: Configure vim install pt 2
    become: no
    environment:
      VIMRUNTIMEDIR: /usr/local/share/vim/vim82
    command:
      cmd: make
      chdir: "{{ vim_dir }}"

  - name: Install vim
    become: no
    command:
      cmd: sudo checkinstall -y
      chdir: "{{ vim_dir }}"

  - name: Remove vim source
    become: yes
    file:
      path: "{{ vim_dir }}"
      state: absent

  - name: Copy relevant vim dotfiles
    become: no
    copy:
      src: "{{ item }}"
      dest: "{{ home_dir }}/{{ item }}"
      mode: 0664
    loop:
      - .vimrc
      - .vim

  - name: Set up vundle plugin manager
    become: no
    git:
      repo: https://github.com/VundleVim/Vundle.vim.git
      dest: "{{ home_dir }}/.vim/bundle/Vundle.vim"

  - name: Vim plugin clean
    become: no
    # Need to ignore errors since vim gives return code 1 here for some reason.
    # See: https://stackoverflow.com/questions/33672491/how-to-use-ansible-to-provision-vim-vundle-plugin
    ignore_errors: yes
    command:
      cmd: vim -E -s -c "source {{ home_dir }}/.vimrc" -c PluginClean! -c qall

  - name: Vim plugin install
    become: no
    ignore_errors: yes
    # Need to ignore errors since vim gives return code 1 here for some reason.
    # See: https://stackoverflow.com/questions/33672491/how-to-use-ansible-to-provision-vim-vundle-plugin
    command:
      cmd: vim -E -s -c "source {{ home_dir }}/.vimrc" -c PluginInstall! -c qall
