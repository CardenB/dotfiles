- block:
  - name: Copy relevant vim dotfiles
    become: no
    copy:
      src: "{{ item }}"
      dest: "{{ home_dir }}/"
      mode: 0664
    loop:
      - .carden_vimrc
      - .vim

  - name: Insert/Update .vimrc to source my personal vimrc and not collide with existing
    become: no
    blockinfile:
      create: yes
      insertbefore: BOF
      marker: '" {mark} Source personal vimrc'
      mode: 0664
      path: ~/.vimrc
      block: |
        so ~/.carden_vimrc

  - name: Vim plugin clean
    become: no
    # Need to ignore errors since vim gives return code 1 here for some reason.
    # See: https://stackoverflow.com/questions/33672491/how-to-use-ansible-to-provision-vim-vundle-plugin
    ignore_errors: yes
    command:
      cmd: vim -E -s -c "source {{ home_dir }}/.vimrc" -c PluginClean! -c qall

  - name: Vim plugin install
    become: no
    ignore_errors: yes
    # Need to ignore errors since vim gives return code 1 here for some reason.
    # See: https://stackoverflow.com/questions/33672491/how-to-use-ansible-to-provision-vim-vundle-plugin
    command:
      cmd: vim -E -s -c "source {{ home_dir }}/.vimrc" -c PluginInstall! -c qall

  - name: Install CoC extensions from vimrc
    shell: |
      vim --not-a-term +'source ~/.vimrc' +'CocInstall -sync' +':CocInstall -sync $(vim --not-a-term +"source ~/.vimrc" +":echo join(g:coc_global_extensions, \" \")")' +qall
    args:
      executable: /bin/bash
    register: coc_install_result
    failed_when: coc_install_result.rc != 0
